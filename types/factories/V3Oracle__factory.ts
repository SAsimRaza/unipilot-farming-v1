/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { V3Oracle, V3OracleInterface } from "../V3Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ulmState",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fees",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "assetToEth",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "checkPairsAndLiquidity",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "checkPoolValidation",
    outputs: [
      {
        internalType: "bool",
        name: "claimPilot",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "checkWethPairsAndLiquidity",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fees",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "ethToAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getPilotAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "pilotAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "getPilotAmountForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAlt",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "altAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wethAmount",
        type: "uint256",
      },
    ],
    name: "getPilotAmountWethPair",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_poolFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ulmState",
        type: "address",
      },
    ],
    name: "setUlmState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117db3803806117db8339818101604052602081101561003357600080fd5b5051600080546001600160a01b03199081163317909155600180546001600160a01b0390931692909116919091179055611769806100726000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635aa6e6751161008157806375d3cd851161005b57806375d3cd8514610272578063d973a3e5146102b3578063ea9eb493146102e5576100c9565b80635aa6e675146101e357806368b850bb146101eb5780636eb5d40714610222576100c9565b80631ed27e18116100b25780631ed27e18146101595780632d2d88311461018157806351a5e2b4146101bd576100c9565b806302574a8a146100ce57806311c48d0414610110575b600080fd5b6100f4600480360360208110156100e457600080fd5b50356001600160a01b0316610311565b604080516001600160a01b039092168252519081900360200190f35b6101476004803603606081101561012657600080fd5b506001600160a01b038135169062ffffff6020820135169060400135610424565b60408051918252519081900360200190f35b61017f6004803603602081101561016f57600080fd5b50356001600160a01b0316610450565b005b6101476004803603608081101561019757600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610496565b6100f4600480360360208110156101d357600080fd5b50356001600160a01b03166104c3565b6100f4610633565b6101476004803603606081101561020157600080fd5b506001600160a01b038135169062ffffff6020820135169060400135610642565b61025e6004803603608081101561023857600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610664565b604080519115158252519081900360200190f35b6101476004803603608081101561028857600080fd5b506001600160a01b03813581169160208101359091169062ffffff604082013516906060013561069a565b610147600480360360608110156102c957600080fd5b506001600160a01b038135169060208101359060400135610770565b610147600480360360408110156102fb57600080fd5b506001600160a01b0381351690602001356107ae565b60408051606081018252610bb881526101f4602082015261271091810191909152600090819081908180805b60038160ff1610156104175761037f8873c778417e063141139fce010982780140aa0cd5ab868460ff166003811061037157fe5b602002015161ffff1661086e565b95506001600160a01b0386161561040f57856001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c957600080fd5b505afa1580156103dd573d6000803e3d6000fd5b505050506040513d60208110156103f357600080fd5b50516001600160801b031694508285111561040f578492508591505b60010161033d565b509450505050505b919050565b60006104468473c778417e063141139fce010982780140aa0cd5ab858561069a565b90505b9392505050565b6000546001600160a01b0316331461046757600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006104a285846107ae565b92506104ae84836107ae565b91506104ba8383610913565b95945050505050565b604080516060808201835273c7ad46e0b8a400bb3c915120d284aafba8fc4735825273d9ba894e0097f8cc2bbc9d24d308b98e36dc6d02602080840191909152734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b8385015283519182018452610bb882526101f49082015261271092810192909252600091829182918280805b60038160ff1610156106275760005b60038160ff16101561061e576105868a878460ff166003811061057257fe5b6020020151878460ff166003811061037157fe5b97506001600160a01b0388161561061657876001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d60208110156105fa57600080fd5b50516001600160801b0316965083871115610616578693508792505b600101610553565b50600101610544565b50979650505050505050565b6000546001600160a01b031681565b600061044673c778417e063141139fce010982780140aa0cd5ab85858561069a565b6000806106738686868661096d565b905069152d02c7e14af6800000811161068d576000610690565b60015b9695505050505050565b6000806106c5731f98431c8ad98523631ae4a59f267346ea31f9846106c0888888610a8c565b610ae2565b90506000816001600160a01b031663252c09d760006040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b15801561070e57600080fd5b505afa158015610722573d6000803e3d6000fd5b505050506040513d608081101561073857600080fd5b50519050600061074b8342849003610bde565b60020b90506107648161075d87610ede565b8a8a610ef4565b98975050505050505050565b6000806107947339491ee11ecae251e9649af6635bc23f13befe63610bb885610642565b905060006107a286866107ae565b90506106908282610913565b6000806107ba84610311565b6001546040805163069f487d60e51b81526001600160a01b0380851660048301529151939450600093919092169163d3e90fa09160248083019260e0929190829003018186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d60e081101561083757600080fd5b50604001519050600061084b868387610424565b90506106907339491ee11ecae251e9649af6635bc23f13befe63610bb883610642565b60408051630b4c774160e11b81526001600160a01b0385811660048301528416602482015262ffffff831660448201529051600091731f98431c8ad98523631ae4a59f267346ea31f98491631698ee8291606480820192602092909190829003018186803b1580156108df57600080fd5b505afa1580156108f3573d6000803e3d6000fd5b505050506040513d602081101561090957600080fd5b5051949350505050565b600082820183811015610449576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008061097986610311565b9050600061098686610311565b90506000610993886104c3565b905060006109a0886104c3565b90506001600160a01b038416158015906109c257506001600160a01b03831615155b15610a275760006109d38589610feb565b905060006109e18589610feb565b905060006109ef8383610913565b90506000610a1073c778417e063141139fce010982780140aa0cd5ab6104c3565b9050610a1c818361118e565b985050505050610a80565b6001600160a01b03821615801590610a4757506001600160a01b03811615155b15610a7b576000610a58838961118e565b90506000610a66838961118e565b9050610a728282610913565b96505050610a80565b600094505b50505050949350505050565b610a9461173c565b826001600160a01b0316846001600160a01b03161115610ab2579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610610b0a57600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b600063ffffffff8216610c1d576040805162461bcd60e51b8152602060048201526002602482015261042560f41b604482015290519081900360640190fd5b6040805160028082526060820183526000926020830190803683370190505090508281600081518110610c4c57fe5b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610c7557fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b8152600481018281528351602483015283516000936001600160a01b0389169363883bdbfd938793909283926044019185820191028083838b5b83811015610ce6578181015183820152602001610cce565b505050509050019250505060006040518083038186803b158015610d0957600080fd5b505afa158015610d1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040908152811015610d4657600080fd5b8101908080516040519392919084640100000000821115610d6657600080fd5b908301906020820185811115610d7b57600080fd5b8251866020820283011164010000000082111715610d9857600080fd5b82525081516020918201928201910280838360005b83811015610dc5578181015183820152602001610dad565b5050505090500160405260200180516040519392919084640100000000821115610dee57600080fd5b908301906020820185811115610e0357600080fd5b8251866020820283011164010000000082111715610e2057600080fd5b82525081516020918201928201910280838360005b83811015610e4d578181015183820152602001610e35565b50505050905001604052505050509050600081600081518110610e6c57fe5b602002602001015182600181518110610e8157fe5b60200260200101510390508463ffffffff168160060b81610e9e57fe5b05935060008160060b128015610ec857508463ffffffff168160060b81610ec157fe5b0760060b15155b15610ed557600019909301925b50505092915050565b806001600160801b038116811461041f57600080fd5b600080610f008661135b565b90506001600160801b036001600160a01b03821611610f6f576001600160a01b0380821680029084811690861610610f4f57610f4a600160c01b876001600160801b03168361168d565b610f67565b610f6781876001600160801b0316600160c01b61168d565b925050610fe2565b6000610f8e6001600160a01b038316806801000000000000000061168d565b9050836001600160a01b0316856001600160a01b031610610fc657610fc1600160801b876001600160801b03168361168d565b610fde565b610fde81876001600160801b0316600160801b61168d565b9250505b50949350505050565b6000808390506000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561102f57600080fd5b505afa158015611043573d6000803e3d6000fd5b505050506040513d602081101561105957600080fd5b50516040805163d21220a760e01b815290516001600160a01b0387169163d21220a7916004808301926020929190829003018186803b15801561109b57600080fd5b505afa1580156110af573d6000803e3d6000fd5b505050506040513d60208110156110c557600080fd5b50516040805163ddca3f4360e01b815290516001600160a01b0388169163ddca3f43916004808301926020929190829003018186803b15801561110757600080fd5b505afa15801561111b573d6000803e3d6000fd5b505050506040513d602081101561113157600080fd5b505191945092509050600080806001600160a01b03861673c778417e063141139fce010982780140aa0cd5ab1461116a5785858a61116e565b84868a5b9250925092506111808383868461069a565b9a9950505050505050505050565b6000808390506000806000836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156111d257600080fd5b505afa1580156111e6573d6000803e3d6000fd5b505050506040513d60208110156111fc57600080fd5b50516040805163d21220a760e01b815290516001600160a01b0387169163d21220a7916004808301926020929190829003018186803b15801561123e57600080fd5b505afa158015611252573d6000803e3d6000fd5b505050506040513d602081101561126857600080fd5b50516040805163ddca3f4360e01b815290516001600160a01b0388169163ddca3f43916004808301926020929190829003018186803b1580156112aa57600080fd5b505afa1580156112be573d6000803e3d6000fd5b505050506040513d60208110156112d457600080fd5b505191945092509050600080806001600160a01b03861673d9ba894e0097f8cc2bbc9d24d308b98e36dc6d02148061132857506001600160a01b03861673c7ad46e0b8a400bb3c915120d284aafba8fc4735145b8061134f57506001600160a01b038616734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b145b61116a5785858a61116e565b60008060008360020b12611372578260020b61137a565b8260020b6000035b9050620d89e88111156113b8576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166113cc57600160801b6113de565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611412576ffff97272373d413259a46990580e213a0260801c5b6004821615611431576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611450576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561146f576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561148e576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156114ad576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156114cc576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156114ec576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561150c576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561152c576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561154c576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561156c576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561158c576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156115ac576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156115cc576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156115ed576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561160d576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561162c576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611649576b048a170391f7dc42444e8fa20260801c5b60008460020b131561166457806000198161166057fe5b0490505b64010000000081061561167857600161167b565b60005b60ff16602082901c0192505050919050565b60008080600019858709868602925082811090839003039050806116c357600084116116b857600080fd5b508290049050610449565b8084116116cf57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60408051606081018252600080825260208201819052918101919091529056fea164736f6c6343000706000a";

export class V3Oracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ulmState: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<V3Oracle> {
    return super.deploy(_ulmState, overrides || {}) as Promise<V3Oracle>;
  }
  getDeployTransaction(
    _ulmState: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ulmState, overrides || {});
  }
  attach(address: string): V3Oracle {
    return super.attach(address) as V3Oracle;
  }
  connect(signer: Signer): V3Oracle__factory {
    return super.connect(signer) as V3Oracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V3OracleInterface {
    return new utils.Interface(_abi) as V3OracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V3Oracle {
    return new Contract(address, _abi, signerOrProvider) as V3Oracle;
  }
}
