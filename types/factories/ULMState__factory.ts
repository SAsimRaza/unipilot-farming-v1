/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ULMState, ULMStateInterface } from "../ULMState";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentageShare",
        type: "uint256",
      },
    ],
    name: "calculateShare",
    outputs: [
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getPoolDetails",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint16",
        name: "poolCardinality",
        type: "uint16",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "liquidityManagerAddress",
        type: "address",
      },
    ],
    name: "getPositionDetails",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "userLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowth0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowth1",
        type: "uint256",
      },
    ],
    name: "getTokensOwedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensOwed0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensOwed1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthGlobal0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthGlobal1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokensOwed0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensOwed1",
        type: "uint256",
      },
    ],
    name: "getUserAndIndexShares",
    outputs: [
      {
        internalType: "uint256",
        name: "indexAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "indexAmount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userAmount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userAmount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "newPercentage",
        type: "uint8",
      },
    ],
    name: "setFeesPercentageIndexFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidityManagerAddress",
        type: "address",
      },
    ],
    name: "shouldReadjust",
    outputs: [
      {
        internalType: "bool",
        name: "readjust",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556002600155610f35806100376000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063696d62831161005b578063696d628314610101578063bb5f30ce14610121578063d3e90fa01461014b578063fd7886171461017157610088565b80630f765aad1461008d5780634d8c43fa146100b9578063556ceeff146100d957806356d7b7f5146100ee575b600080fd5b6100a061009b366004610ab0565b610191565b6040516100b09493929190610ed5565b60405180910390f35b6100cc6100c7366004610d0a565b610260565b6040516100b09190610ecc565b6100ec6100e7366004610d6a565b61027c565b005b6100a06100fc366004610d0a565b6102eb565b61011461010f366004610a66565b610332565b6040516100b09190610d86565b61013461012f366004610c8a565b6103c8565b6040516100b09b9a99989796959493929190610d9a565b61015e6101593660046109f6565b61052d565b6040516100b09796959493929190610e29565b61018461017f366004610a2e565b610791565b6040516100b09190610e87565b600080600080886001600160a01b0316636fd0ea92896040518263ffffffff1660e01b81526004016101c39190610d86565b6101606040518083038186803b1580156101dc57600080fd5b505afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102149190610b1a565b50909a509850610243975061023496508995508d9450506108e892505050565b88670de0b6b3a76400006108fe565b935061025261023482876108e8565b925095509550955095915050565b60006102758383670de0b6b3a76400006108fe565b9392505050565b6000546001600160a01b0316331461029357600080fd5b60008160ff16116102bf5760405162461bcd60e51b81526004016102b690610e92565b60405180910390fd5b60648160ff1611156102e35760405162461bcd60e51b81526004016102b690610eaf565b60ff16600155565b6000806000806102ff8660015460646108fe565b935061030f8560015460646108fe565b925061031b86856108e8565b915061032785846108e8565b905092959194509250565b604051630b4c774160e11b8152600090731f98431c8ad98523631ae4a59f267346ea31f98490631698ee829061037090879087908790600401610e01565b60206040518083038186803b15801561038857600080fd5b505afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190610a12565b949350505050565b6000806000806000806000806000806000808c9050806001600160a01b03166399fbab888f6040518263ffffffff1660e01b81526004016104099190610ecc565b60e06040518083038186803b15801561042157600080fd5b505afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610cae565b9091929394955090919250909150905050809850819d505050806001600160a01b0316636e9384068d6040518263ffffffff1660e01b815260040161049e9190610d86565b60a06040518083038186803b1580156104b657600080fd5b505afa1580156104ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ee9190610d2b565b9399509197509550935091506105038c61052d565b909192509091509050809c50819b50829d50839e5050505050509295989b509295989b9093969950565b600080600080600080600080889050806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561057557600080fd5b505afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad9190610a12565b9750806001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610a12565b9650806001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561065b57600080fd5b505afa15801561066f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106939190610c6e565b9550806001600160a01b0316631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ce57600080fd5b505afa1580156106e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107069190610bc2565b9350806001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561074157600080fd5b505afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190610bdc565b509c9e9b9d50999b5099969850919650949350505050565b6000806000836001600160a01b0316636fd0ea92866040518263ffffffff1660e01b81526004016107c29190610d86565b6101606040518083038186803b1580156107db57600080fd5b505afa1580156107ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108139190610b1a565b505050505050505050915091506000856001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610b00565b905060006108a08761052d565b9650505050505050600082905080850160020b8260020b12806108ca575080840360020b8260020b135b156108d857600195506108dd565b600095505b505050505092915050565b808203828111156108f857600080fd5b92915050565b6000808060001985870986860292508281109083900303905080610934576000841161092957600080fd5b508290049050610275565b80841161094057600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b8051600281900b81146109bf57600080fd5b919050565b80516fffffffffffffffffffffffffffffffff811681146109bf57600080fd5b805161ffff811681146109bf57600080fd5b600060208284031215610a07578081fd5b813561027581610ef0565b600060208284031215610a23578081fd5b815161027581610ef0565b60008060408385031215610a40578081fd5b8235610a4b81610ef0565b91506020830135610a5b81610ef0565b809150509250929050565b600080600060608486031215610a7a578081fd5b8335610a8581610ef0565b92506020840135610a9581610ef0565b91506040840135610aa581610f08565b809150509250925092565b600080600080600060a08688031215610ac7578081fd5b8535610ad281610ef0565b94506020860135610ae281610ef0565b94979496505050506040830135926060810135926080909101359150565b600060208284031215610b11578081fd5b610275826109ad565b60008060008060008060008060008060006101608c8e031215610b3b578586fd5b610b448c6109ad565b9a50610b5260208d016109ad565b9950610b6060408d016109c4565b9850610b6e60608d016109ad565b9750610b7c60808d016109ad565b9650610b8a60a08d016109c4565b955060c08c0151945060e08c015193506101008c015192506101208c015191506101408c015190509295989b509295989b9093969950565b600060208284031215610bd3578081fd5b610275826109c4565b600080600080600080600060e0888a031215610bf6578283fd5b8751610c0181610ef0565b9650610c0f602089016109ad565b9550610c1d604089016109e4565b9450610c2b606089016109e4565b9350610c39608089016109e4565b925060a0880151610c4981610f19565b60c08901519092508015158114610c5e578182fd5b8091505092959891949750929550565b600060208284031215610c7f578081fd5b815161027581610f08565b60008060408385031215610c9c578182fd5b823591506020830135610a5b81610ef0565b600080600080600080600060e0888a031215610cc8578081fd5b875196506020880151610cda81610ef0565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b60008060408385031215610d1c578182fd5b50508035926020909101359150565b600080600080600060a08688031215610d42578283fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600060208284031215610d7b578081fd5b813561027581610f19565b6001600160a01b0391909116815260200190565b6001600160a01b039b8c168152998b1660208b015297909916604089015260029590950b606088015262ffffff93909316608087015260a086019190915260c085015260e08401526101008301526101208201929092526101408101919091526101600190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b039788168152958716602087015262ffffff94909416604086015261ffff9290921660608501526fffffffffffffffffffffffffffffffff16608084015290921660a082015260029190910b60c082015260e00190565b901515815260200190565b60208082526003908201526250545360e81b604082015260600190565b60208082526003908201526214151360ea1b604082015260600190565b90815260200190565b93845260208401929092526040830152606082015260800190565b6001600160a01b0381168114610f0557600080fd5b50565b62ffffff81168114610f0557600080fd5b60ff81168114610f0557600080fdfea164736f6c6343000706000a";

export class ULMState__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ULMState> {
    return super.deploy(overrides || {}) as Promise<ULMState>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ULMState {
    return super.attach(address) as ULMState;
  }
  connect(signer: Signer): ULMState__factory {
    return super.connect(signer) as ULMState__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ULMStateInterface {
    return new utils.Interface(_abi) as ULMStateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ULMState {
    return new Contract(address, _abi, signerOrProvider) as ULMState;
  }
}
