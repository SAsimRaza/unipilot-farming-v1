/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidityMigrator,
  LiquidityMigratorInterface,
} from "../LiquidityMigrator";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pair",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "unipilotAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "percentageToMigrate",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "liquidityToMigrate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sqrtPriceX96",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unipilotTokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "refundAsETH",
            type: "bool",
          },
        ],
        internalType: "struct ILiquidityMigrator.MigrateV2Params",
        name: "params",
        type: "tuple",
      },
    ],
    name: "migrateV2Liquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "liquidityManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "unipilotAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint8",
            name: "percentageToMigrate",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "uniswapTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unipilotTokenId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "refundAsETH",
            type: "bool",
          },
        ],
        internalType: "struct ILiquidityMigrator.MigrateV3Params",
        name: "params",
        type: "tuple",
      },
    ],
    name: "migrateV3Liquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a35806100206000396000f3fe6080604052600436106100385760003560e01c8063150b7a02146100415780632b7610b21461007757806385b7e208146100975761003f565b3661003f57005b005b34801561004d57600080fd5b5061006161005c3660046114a4565b6100b7565b60405161006e9190611814565b60405180910390f35b34801561008357600080fd5b5061003f610092366004611576565b6100c8565b3480156100a357600080fd5b5061003f6100b236600461158e565b610948565b630a85bd0160e11b95945050505050565b60006100da60e0830160c0840161161e565b60ff16116101035760405162461bcd60e51b81526004016100fa90611841565b60405180910390fd5b606461011560e0830160c0840161161e565b60ff1611156101365760405162461bcd60e51b81526004016100fa90611878565b6101436020820182611465565b6001600160a01b03166323b872dd610159611042565b6101666020850185611465565b8460e001356040518463ffffffff1660e01b8152600401610189939291906117c8565b602060405180830381600087803b1580156101a357600080fd5b505af11580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db919061155a565b506000806101ec6020840184611465565b6001600160a01b03166389afcb44306040518263ffffffff1660e01b815260040161021791906117b4565b6040805180830381600087803b15801561023057600080fd5b505af1158015610244573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026891906115bc565b90925090506000606461028e61028460e0870160c0880161161e565b859060ff16611046565b8161029557fe5b049050600060646102af61028460e0880160c0890161161e565b816102b657fe5b0490506102e26102cc6080870160608801611465565b6102dc6060880160408901611465565b84611070565b61030b6102f560a0870160808801611465565b6103056060880160408901611465565b83611070565b60007393f4e5466417fcb20952e5b254028dc3258f20b863696d62836103376080890160608a01611465565b61034760a08a0160808b01611465565b61035760c08b0160a08c016115a0565b6040518463ffffffff1660e01b8152600401610375939291906117ec565b60206040518083038186803b15801561038d57600080fd5b505afa1580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c59190611488565b90506103cf6113f9565b6001600160a01b038216156105495760006103f060c0890160a08a016115a0565b8861012001356040516020016104079291906119d3565b604051602081830303815290604052905087604001602081019061042b9190611465565b6001600160a01b0316634331950d6040518060c0016040528061044c611042565b6001600160a01b031681526020018b602001602081019061046d9190611465565b6001600160a01b0316815260200161048b60808d0160608e01611465565b6001600160a01b031681526020016104a960a08d0160808e01611465565b6001600160a01b0316815260200188815260200187815250836040518363ffffffff1660e01b81526004016104df929190611993565b60a060405180830381600087803b1580156104f957600080fd5b505af115801561050d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053191906115df565b506060860152604085015260208401528252506106f7565b600060405180604001604052808960a001602081019061056991906115a0565b8a61010001356040516020016105809291906119d3565b60408051601f1981840301815291905281526020016105a560c08b0160a08c016115a0565b60006040516020016105b89291906119bb565b60408051601f1981840301815291815291529091506105dd9060608a01908a01611465565b6001600160a01b0316633b5ea3916040518060c001604052806105fe611042565b6001600160a01b031681526020018b602001602081019061061f9190611465565b6001600160a01b0316815260200161063d60808d0160608e01611465565b6001600160a01b0316815260200161065b60a08d0160808e01611465565b6001600160a01b0316815260200188815260200187815250836040518363ffffffff1660e01b8152600401610691929190611935565b60a060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e391906115df565b506060860152604085015260208401528252505b60408101518151606083015160208401519190920191018782101561083b57858210156107485761074861073160808b0160608c01611465565b61074160608c0160408d01611465565b6000611070565b81880361075d6101608b016101408c0161153e565b8015610794575073c778417e063141139fce010982780140aa0cd5ab61078960808c0160608d01611465565b6001600160a01b0316145b1561081857604051632e1a7d4d60e01b815273c778417e063141139fce010982780140aa0cd5ab90632e1a7d4d906107d09084906004016119e8565b600060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b5050505061081361080d611042565b826111be565b610839565b61083961082b60808c0160608d01611465565b610833611042565b836112b2565b505b8681101561093d578481101561085e5761085e61073160a08b0160808c01611465565b8087036108736101608b016101408c0161153e565b80156108aa575073c778417e063141139fce010982780140aa0cd5ab61089f60a08c0160808d01611465565b6001600160a01b0316145b1561092857604051632e1a7d4d60e01b815273c778417e063141139fce010982780140aa0cd5ab90632e1a7d4d906108e69084906004016119e8565b600060405180830381600087803b15801561090057600080fd5b505af1158015610914573d6000803e3d6000fd5b5050505061092361080d611042565b61093b565b61093b61082b60a08c0160808d01611465565b505b505050505050505050565b600061095a60c0830160a0840161161e565b60ff161161097a5760405162461bcd60e51b81526004016100fa90611841565b606461098c60c0830160a0840161161e565b60ff1611156109ad5760405162461bcd60e51b81526004016100fa90611878565b6109b56113f9565b73c36442b4a4522e871399cd717abdd847ab11fe88806342842e0e6109d8611042565b308660c001356040518463ffffffff1660e01b81526004016109fc939291906117c8565b600060405180830381600087803b158015610a1657600080fd5b505af1158015610a2a573d6000803e3d6000fd5b505060405163133f757160e31b81526000925073c36442b4a4522e871399cd717abdd847ab11fe8891506399fbab8890610a6c9060c0880135906004016119e8565b6101806040518083038186803b158015610a8557600080fd5b505afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abd919061163f565b50505050975050505050505050816001600160a01b0316630c49ccbe6040518060a001604052808760c001358152602001846001600160801b031681526020016000815260200160008152602001426078018152506040518263ffffffff1660e01b8152600401610b2e91906118f2565b6040805180830381600087803b158015610b4757600080fd5b505af1158015610b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7f91906115bc565b50506040805160808101825260c086013581523060208201526001600160801b038183018190526060820152905163fc6f786560e01b815260009182916001600160a01b0386169163fc6f786591610bda91906004016118af565b6040805180830381600087803b158015610bf357600080fd5b505af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906115bc565b909250905060006064610c4761028460c08a0160a08b0161161e565b81610c4e57fe5b04905060006064610c6861028460c08b0160a08c0161161e565b81610c6f57fe5b049050610c95610c8560608a0160408b01611465565b6102dc60408b0160208c01611465565b610cb8610ca860808a0160608b01611465565b61030560408b0160208c01611465565b6000610cca60a08a0160808b016115a0565b8960e00135604051602001610ce09291906119d3565b60408051601f19818403018152918152909150610d02908a0160208b01611465565b6001600160a01b0316634331950d6040518060c00160405280610d23611042565b6001600160a01b03168152602090810190610d40908e018e611465565b6001600160a01b03168152602001610d5e60608e0160408f01611465565b6001600160a01b03168152602001610d7c60808e0160608f01611465565b6001600160a01b0316815260200186815260200185815250836040518363ffffffff1660e01b8152600401610db2929190611993565b60a060405180830381600087803b158015610dcc57600080fd5b505af1158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0491906115df565b5060608c0181905260408c0182905260208c01839052838c529201910186821015610f335784821015610e5457610e54610e4460608d0160408e01611465565b61074160408e0160208f01611465565b818703610e696101208d016101008e0161153e565b8015610ea0575073c778417e063141139fce010982780140aa0cd5ab610e9560608e0160408f01611465565b6001600160a01b0316145b15610f1e57604051632e1a7d4d60e01b815273c778417e063141139fce010982780140aa0cd5ab90632e1a7d4d90610edc9084906004016119e8565b600060405180830381600087803b158015610ef657600080fd5b505af1158015610f0a573d6000803e3d6000fd5b50505050610f1961080d611042565b610f31565b610f3161082b60608e0160408f01611465565b505b858110156110355783811015610f5657610f56610e4460808d0160608e01611465565b808603610f6b6101208d016101008e0161153e565b8015610fa2575073c778417e063141139fce010982780140aa0cd5ab610f9760808e0160608f01611465565b6001600160a01b0316145b1561102057604051632e1a7d4d60e01b815273c778417e063141139fce010982780140aa0cd5ab90632e1a7d4d90610fde9084906004016119e8565b600060405180830381600087803b158015610ff857600080fd5b505af115801561100c573d6000803e3d6000fd5b5050505061101b61080d611042565b611033565b61103361082b60808e0160608f01611465565b505b5050505050505050505050565b3390565b60008215806110615750508181028183828161105e57fe5b04145b61106a57600080fd5b92915050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1781529251825160009485949389169392918291908083835b602083106110ec5780518252601f1990920191602091820191016110cd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461114e576040519150601f19603f3d011682016040523d82523d6000602084013e611153565b606091505b5091509150818015611181575080511580611181575080806020019051602081101561117e57600080fd5b50515b6111b7576040805162461bcd60e51b8152602060048201526002602482015261534160f01b604482015290519081900360640190fd5b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040518082805190602001908083835b6020831061120a5780518252601f1990920191602091820191016111eb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461126c576040519150601f19603f3d011682016040523d82523d6000602084013e611271565b606091505b50509050806112ad576040805162461bcd60e51b815260206004820152600360248201526253544560e81b604482015290519081900360640190fd5b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b6020831061132e5780518252601f19909201916020918201910161130f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611390576040519150601f19603f3d011682016040523d82523d6000602084013e611395565b606091505b50915091508180156113c35750805115806113c357508080602001905160208110156113c057600080fd5b50515b6111b7576040805162461bcd60e51b815260206004820152600260248201526114d560f21b604482015290519081900360640190fd5b6040518060800160405280600081526020016000815260200160008152602001600081525090565b805161142c816119f1565b919050565b8051600281900b811461142c57600080fd5b80516001600160801b038116811461142c57600080fd5b805161142c81611a17565b600060208284031215611476578081fd5b8135611481816119f1565b9392505050565b600060208284031215611499578081fd5b8151611481816119f1565b6000806000806000608086880312156114bb578081fd5b85356114c6816119f1565b945060208601356114d6816119f1565b935060408601359250606086013567ffffffffffffffff808211156114f9578283fd5b818801915088601f83011261150c578283fd5b81358181111561151a578384fd5b89602082850101111561152b578384fd5b9699959850939650602001949392505050565b60006020828403121561154f578081fd5b813561148181611a09565b60006020828403121561156b578081fd5b815161148181611a09565b60006101608284031215611588578081fd5b50919050565b60006101208284031215611588578081fd5b6000602082840312156115b1578081fd5b813561148181611a17565b600080604083850312156115ce578182fd5b505080516020909101519092909150565b600080600080600060a086880312156115f6578081fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60006020828403121561162f578081fd5b813560ff81168114611481578182fd5b6000806000806000806000806000806000806101808d8f03121561166157898afd5b8c516bffffffffffffffffffffffff8116811461167c578a8bfd5b9b5061168a60208e01611421565b9a5061169860408e01611421565b99506116a660608e01611421565b98506116b460808e0161145a565b97506116c260a08e01611431565b96506116d060c08e01611431565b95506116de60e08e01611443565b94506101008d015193506101208d015192506116fd6101408e01611443565b915061170c6101608e01611443565b90509295989b509295989b509295989b565b60008151808452815b8181101561174357602081850181015186830182015201611727565b818111156117545782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03808251168352806020830151166020840152806040830151166040840152806060830151166060840152506080810151608083015260a081015160a08301525050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60208082526014908201527f50657263656e7461676520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526014908201527f50657263656e7461676520746f6f206c61726765000000000000000000000000604082015260600190565b815181526020808301516001600160a01b0316908201526040808301516001600160801b0390811691830191909152606092830151169181019190915260800190565b600060a082019050825182526001600160801b03602084015116602083015260408301516040830152606083015160608301526080830151608083015292915050565b600060e082016119458386611769565b60e060c084015261012083019084835b60028110156119875760df1986850301835261197284835161171e565b93506020928301929190910190600101611955565b50919695505050505050565b600061199f8285611769565b60e060c08301526119b360e083018461171e565b949350505050565b62ffffff92909216825260ff16602082015260400190565b62ffffff929092168252602082015260400190565b90815260200190565b6001600160a01b0381168114611a0657600080fd5b50565b8015158114611a0657600080fd5b62ffffff81168114611a0657600080fdfea164736f6c6343000706000a";

export class LiquidityMigrator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityMigrator> {
    return super.deploy(overrides || {}) as Promise<LiquidityMigrator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityMigrator {
    return super.attach(address) as LiquidityMigrator;
  }
  connect(signer: Signer): LiquidityMigrator__factory {
    return super.connect(signer) as LiquidityMigrator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityMigratorInterface {
    return new utils.Interface(_abi) as LiquidityMigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityMigrator {
    return new Contract(address, _abi, signerOrProvider) as LiquidityMigrator;
  }
}
